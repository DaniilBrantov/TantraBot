from telebot import types
import sqlite3

def handle_sendmsgtouser(message, client, sql):
    cid = message.message.chat.id

    try:
        user_info = sql.execute(f"SELECT * FROM users WHERE id = {cid}").fetchone()
        
        if user_info:
            if user_info[3] == 777:
                msg = client.send_message(cid, f"üë§ | –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:")
                client.register_next_step_handler(msg, handle_sendmsgtouser_next, client)
            else:
                msg = client.send_message(cid, f"üë§ | –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        else:
            msg = client.send_message(cid, f"üë§ | –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å ID {cid}")
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ ID –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}')

def handle_sendmsgtouser_next(message, client):
    try:
        cid = message.chat.id
        getsendmsgtouserid = int(message.text)
        msg = client.send_message(cid, f"üì® | –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:")
        client.register_next_step_handler(msg, handle_sendmsgtouser_next_text, client, getsendmsgtouserid)
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}')

def handle_sendmsgtouser_next_text(message, client, user_id):
    cid = message.chat.id

    try:
        getsendmsgtousertext = message.text
        rmk = types.InlineKeyboardMarkup()
        item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data=f'sendmsgtouseryes_{user_id}_{getsendmsgtousertext}')  # –ø–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ callback_data
        item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='sendmsgtouserno')
        rmk.add(item_yes, item_no)
        msg = client.send_message(cid, f"üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}\n–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {getsendmsgtousertext}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ?", reply_markup=rmk)
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}')

def handle_sendmsgtouser_callback(call, client, sql):
    print("Callback data:", call.data)
    
    try:
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ callback_data
        user_id = call.data.split('_')[1]
        getsendmsgtousertext = call.data.split('_')[2]
        if call.data.startswith('sendmsgtouseryes'):
            client.delete_message(call.message.chat.id, call.message.message_id)
            client.send_message(call.message.chat.id, f"‚úâÔ∏è | –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            client.send_message(user_id, f"‚úâÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–ª–∞–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{getsendmsgtousertext}")
        elif call.data == 'sendmsgtouserno':
            client.delete_message(call.message.chat.id, call.message.message_id)
            client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        client.answer_callback_query(callback_query_id=call.id)
    except Exception as e:
        client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}')
