import telebot
from telebot import types
import configure

# –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–¥–∞–Ω)
ADMIN_ID = configure.config['admin_id']

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
def handle_buy(message, client, sql):
    try:
        cid = message.chat.id
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        all_products = sql.execute("SELECT * FROM shop").fetchall()

        if not all_products:
            client.send_message(cid, "üõí | –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç.")
            return

        for product in all_products:
            product_id = product[0]
            product_name = product[1]
            product_price = product[2]
            product_description = product[4]
            product_photo = product[3]

            # –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            text = f"{product_name}\n{product_description}\n–¶–µ–Ω–∞: {product_price} —Ä—É–±.\n\n"

            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å"
            rmk = types.InlineKeyboardMarkup()
            item_buy = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å', callback_data=f'confirm_order_{product_id}')
            rmk.add(item_buy)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if product_photo:
                client.send_photo(
                    cid,
                    photo=product_photo,
                    caption=text,
                    parse_mode='Markdown',
                    reply_markup=rmk
                )
            else:
                client.send_message(
                    cid,
                    text,
                    parse_mode='Markdown',
                    reply_markup=rmk
                )

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: {e}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
def handle_confirm_order(call, client, sql):
    try:
        message_id = call.message.message_id
        # –ü–æ–ª—É—á–∞–µ–º ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ callback_data
        product_id = int(call.data.split('_')[2])

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
        product = sql.execute(f"SELECT * FROM shop WHERE id = {product_id}").fetchone()

        if product:
            product_name = product[1]
            product_price = product[2]
            product_description = product[4]
            product_photo = product[3]

            # –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            text = (
                f"–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ç–æ–≤–∞—Ä:\n\n"
                f"–ù–∞–∑–≤–∞–Ω–∏–µ: {product_name}\n"
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {product_description}\n"
                f"–¶–µ–Ω–∞: {product_price} —Ä—É–±.\n\n"
                f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?"
            )

            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            rmk = types.InlineKeyboardMarkup()
            confirm_button = types.InlineKeyboardButton(text='–î–∞', callback_data=f'order_confirmed_{product_id}')
            cancel_button = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data=f'order_confirmed_0')
            rmk.add(confirm_button, cancel_button)

            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            if product_photo:
                client.edit_message_media(
                    chat_id=call.message.chat.id,
                    message_id=message_id,
                    media=telebot.types.InputMediaPhoto(
                        media=product_photo,
                        caption=text,
                        parse_mode='Markdown'
                    ),
                    reply_markup=rmk
                )
            else:
                client.edit_message_text(
                    text=text,
                    chat_id=call.message.chat.id,
                    message_id=message_id,
                    parse_mode='Markdown',
                    reply_markup=rmk
                )

    except Exception as e:
        client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}')


def handle_order_confirmation(call, client, sql):
    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º callback_data –Ω–∞ —á–∞—Å—Ç–∏
        data_parts = call.data.split('_')

        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –∏–º–µ–µ—Ç —Ö–æ—Ç—è –±—ã 3 —ç–ª–µ–º–µ–Ω—Ç–∞
        if len(data_parts) < 3:
            raise ValueError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –≤ callback_data")

        product_id = int(data_parts[2])

        if product_id < 1:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ 4-–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ (–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è)
            if len(data_parts) > 3:
                # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–µ–º –µ—Å—Ç—å
                message_id = int(data_parts[3])
                client.delete_message(call.message.chat.id, message_id)
                # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            

            rmk = types.InlineKeyboardMarkup()
            menu_button = types.InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data=f'help')
            rmk.add(menu_button)
            client.send_message(call.message.chat.id, "‚ùå | –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω.", reply_markup=rmk)

        elif product_id > 0:
            # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
            client.delete_message(call.message.chat.id, call.message.message_id-0)

            user_id = call.from_user.id
            user_link = f"tg://user?id={user_id}"
            rmk = types.InlineKeyboardMarkup()
            menu_button = types.InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data=f'help')
            rmk.add(menu_button)
            client.send_message(call.message.chat.id, "‚úÖ | –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –í–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ –º—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è", reply_markup=rmk
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
            client.send_message(ADMIN_ID, f"‚ö†Ô∏è | –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω:\nID —É—Å–ª—É–≥–∏: {product_id}\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}\n –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç: {user_link}")

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ callback
        client.answer_callback_query(call.id)

    except Exception as e:
        client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞: {e}')
