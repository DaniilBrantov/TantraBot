from telebot import types
import sqlite3
from telegram.ext import CallbackQueryHandler

def check_access(uid, sql, lock):
    try:
        with lock:
            sql.execute("SELECT access FROM users WHERE id = ?", (uid,))
            access_level = sql.fetchone()
            if access_level and access_level[0] >= 1:
                return True
        return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞: {e}")
        return False

def handle_send_district_choice_message(message, client, sql, lock):
    try:
        cid = message.message.chat.id
        if not check_access(cid, sql, lock):
            client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
            return
        

        rmk = types.InlineKeyboardMarkup()
        sql.execute("SELECT id, district FROM district")
        sql.row_factory = sqlite3.Row  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ row_factory
        districts = sql.fetchall()
        for row in districts:
            district_id = row['id']
            district_name = row['district']
            callback_data = f"addproductlocation_{district_id}"
            button = types.InlineKeyboardButton(text=district_name, callback_data=callback_data)
            rmk.add(button)
        
        client.send_message(cid, 'üî∞ | –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç:', reply_markup=rmk)
        
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}')


def handle_productlocation_callback(call, client, sql):
    cid = call.message.chat.id

    try:
        selected_district = call.data.split('_')[1]

        sql.row_factory = sqlite3.Row

        sql.execute("SELECT * FROM shop")
        products = sql.fetchall()

        rmk = types.InlineKeyboardMarkup()
        for product in products:
            product_name = product['name']
            callback_data = f"addlocphoto_{product['id']}_{selected_district}"
            button = types.InlineKeyboardButton(text=product_name, callback_data=callback_data)
            rmk.add(button)

        client.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç:', reply_markup=rmk)
        
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞ –ª–æ–∫–∞—Ü–∏–∏: {e}')

def handle_addloc_photo(call, client, sql, db):
    try:
        cid = call.message.chat.id
        product_id = call.data.split('_')[1]
        district_id = call.data.split('_')[2]

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –æ–±—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏
        client.send_message(cid, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏:')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ –∏ —Ä–∞–π–æ–Ω–µ –≤ —Å–ª–æ–≤–∞—Ä–µ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
        if not hasattr(client, 'user_data'):
            client.user_data = {}
        client.user_data[cid] = {'product_id': product_id, 'district_id': district_id}

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        client.register_next_step_handler(call.message, handle_general_location_photo, client, sql, db)
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}')

def handle_general_location_photo(message, client, sql, db):
    try:
        cid = message.chat.id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏—à–ª–æ —Ñ–æ—Ç–æ
        if message.photo:
            # –ü–æ–ª—É—á–∞–µ–º file_id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
            general_photo = message.photo[-1].file_id

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ –∏ —Ä–∞–π–æ–Ω–µ –∏–∑ user_data
            user_data = client.user_data.get(cid, {})
            product_id = user_data.get('product_id', '')
            district_id = user_data.get('district_id', '')

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏
            client.send_message(cid, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏:')

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id –æ–±—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ user_data
            user_data['general_photo'] = general_photo
            client.user_data[cid] = user_data

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            client.register_next_step_handler(message, handle_detailed_location_photo, client, sql, db)
        else:
            client.send_message(cid, '‚ö†Ô∏è | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏.')
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}')

def handle_detailed_location_photo(message, client, sql, db):
    try:
        cid = message.chat.id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏—à–ª–æ —Ñ–æ—Ç–æ
        if message.photo:
            # –ü–æ–ª—É—á–∞–µ–º file_id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
            detailed_photo = message.photo[-1].file_id

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ, —Ä–∞–π–æ–Ω–µ –∏ –æ–±—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–∑ user_data
            user_data = client.user_data.get(cid, {})
            product_id = user_data.get('product_id', '')
            district_id = user_data.get('district_id', '')
            general_photo = user_data.get('general_photo', '')

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –ª–æ–∫–∞—Ü–∏–∏
            client.send_message(cid, '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é:')

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ user_data
            user_data['detailed_photo'] = detailed_photo
            client.user_data[cid] = user_data

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏
            client.register_next_step_handler(message, handle_location_input, client, sql, db, product_id, district_id, general_photo, detailed_photo)
        else:
            client.send_message(cid, '‚ö†Ô∏è | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.')
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}')

def handle_location_input(message, client, sql, db, product_id, district_id, general_photo, detailed_photo):
    try:
        cid = message.chat.id
        location = message.text

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ product_id –∏ district_id –≤ int
        product_id = int(product_id)
        district_id = int(district_id)

        # –ù–∞—á–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        with db:
            # –í—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            sql.execute("INSERT INTO locations (district_id, product_id, location, image, detailed_image) VALUES (?, ?, ?, ?, ?)",
                        (district_id, product_id, location, general_photo, detailed_photo))
            db.commit() 

        # –ü–æ–ª—É—á–∏—Ç—å –∏–º—è –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ —Ä–∞–π–æ–Ω–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        with db:
            sql.row_factory = sqlite3.Row
            cursor = db.cursor()
            cursor.execute("SELECT name FROM shop WHERE id=?", (product_id,))
            product_name = cursor.fetchone()[0]  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞

            cursor.execute("SELECT district FROM district WHERE id=?", (district_id,))
            district_name = cursor.fetchone()[0]  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞

        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ª–æ–∫–∞—Ü–∏–∏
        response = f'''‚úÖ –õ–æ–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!

        –†–∞–π–æ–Ω: {district_name}
        –¢–æ–≤–∞—Ä: {product_name}
        –õ–æ–∫–∞—Ü–∏—è: {location}
        '''
        client.send_message(cid, response)
        client.send_photo(cid, general_photo, caption="–û–±—â–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ª–æ–∫–∞—Ü–∏–∏")
        client.send_photo(cid, detailed_photo, caption="–ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ª–æ–∫–∞—Ü–∏–∏")
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏: {e}')
